// <auto-generated />
using System;
using BanqueTardi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BanqueTardi.MVC.Migrations
{
    [DbContext(typeof(ClientContext))]
    [Migration("20241026094237_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BanqueTardi.Models.Banque", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstitutionID")
                        .HasMaxLength(3)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TransitID")
                        .HasMaxLength(5)
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Banques", (string)null);
                });

            modelBuilder.Entity("BanqueTardi.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodePostale")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbDecouverts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomParent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelephoneParent")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("BanqueTardi.Models.Compte", b =>
                {
                    b.Property<int>("CompteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeCompteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BanqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Solde")
                        .HasColumnType("money");

                    b.HasKey("CompteId", "TypeCompteID");

                    b.HasIndex("BanqueId");

                    b.HasIndex("ClientId");

                    b.HasIndex("TypeCompteID");

                    b.ToTable("Comptes", (string)null);
                });

            modelBuilder.Entity("BanqueTardi.Models.Operation", b =>
                {
                    b.Property<int>("OperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOperation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Montant")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeCompteID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OperationId");

                    b.HasIndex("CompteId", "TypeCompteID");

                    b.ToTable("Operations", (string)null);
                });

            modelBuilder.Entity("BanqueTardi.Models.TypeCompte", b =>
                {
                    b.Property<int>("Identifiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TauxInteret")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TauxInteretDecouvert")
                        .HasColumnType("INTEGER");

                    b.HasKey("Identifiant");

                    b.ToTable("TypeComptes", (string)null);
                });

            modelBuilder.Entity("BanqueTardi.Models.Compte", b =>
                {
                    b.HasOne("BanqueTardi.Models.Banque", "Banque")
                        .WithMany()
                        .HasForeignKey("BanqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanqueTardi.Models.Client", "Client")
                        .WithMany("Comptes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanqueTardi.Models.TypeCompte", "TypeCompte")
                        .WithMany()
                        .HasForeignKey("TypeCompteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banque");

                    b.Navigation("Client");

                    b.Navigation("TypeCompte");
                });

            modelBuilder.Entity("BanqueTardi.Models.Operation", b =>
                {
                    b.HasOne("BanqueTardi.Models.Compte", "Compte")
                        .WithMany("Operations")
                        .HasForeignKey("CompteId", "TypeCompteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("BanqueTardi.Models.Client", b =>
                {
                    b.Navigation("Comptes");
                });

            modelBuilder.Entity("BanqueTardi.Models.Compte", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
